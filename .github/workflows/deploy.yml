name: Deno Lint, Format, and Test

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  id-token: write
  contents: read
  secrets: read

jobs:
  test:
    runs-on: ubuntu-latest
    environment: testing
    steps:
      - name: Setup repo
        uses: actions/checkout@v3

      - name: Setup Deno
        # uses: denoland/setup-deno@v1
        uses: denoland/setup-deno@004814556e37c54a2f6e31384c9e18e983317366
        with:
          deno-version: v1.x

      - name: Verify formatting
        run: deno fmt --check

      - name: Run linter
        run: deno lint

      - name: Run tests
        run: deno test -A --unstable ./tests/index.ts
        env:
          GRAPHQL_ENDPOINT: ${{ secrets.GRAPHQL_ENDPOINT }}
          GRAPHQL_TOKEN: ${{ secrets.GRAPHQL_TOKEN }}
          GOOGLE_CLOUD_BUCKET: ${{ secrets.GOOGLE_CLOUD_BUCKET }}
          GOOGLE_PRIVATE_KEY_JSON: ${{ secrets.GOOGLE_PRIVATE_KEY_JSON }}

      # - name: Deploy
      #   id: deploy
      #   uses: denoland/deployctl@v1
      #   with:
      #     project: oscar-dev
      #     entrypoint: ./src/index.ts
      #     import-map: ./import_map.json

      # - name: Echo Deploy Id Output
      #   run: echo "Deploy Id: $DEPLOY_ID"
      #   env:
      #     DEPLOY_ID: ${{ steps.deploy.outputs.deployment-id }}
      
      # - name: Promote to production
      # TODO: header
      #   run: |
      #     curl -X PATCH -d '{ "productionDeployment": "${{ steps.deploy.outputs.deployment-id }}" }' https://dash.deno.com/_api/projects/${{ secrets.DENO_DEPLOY_PROJECT_ID }}


        
